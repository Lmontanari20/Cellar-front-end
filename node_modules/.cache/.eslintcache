[{"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/index.js":"1","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/reportWebVitals.js":"2","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/App.js":"3","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/Bottles.js":"4","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/WineNav.js":"5","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/LogInContainer.js":"6","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/CellarGui.js":"7","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/cellar-forms/Sections.js":"8","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/cellar-forms/Filter.js":"9","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/cellar-forms/AddBottle.js":"10","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/Section.js":"11","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/Cell.js":"12"},{"size":500,"mtime":1613063523453,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1613063523454,"results":"15","hashOfConfig":"14"},{"size":6232,"mtime":1613599966834,"results":"16","hashOfConfig":"14"},{"size":3717,"mtime":1613521558811,"results":"17","hashOfConfig":"14"},{"size":1570,"mtime":1613515930618,"results":"18","hashOfConfig":"14"},{"size":1021,"mtime":1613515930618,"results":"19","hashOfConfig":"14"},{"size":2007,"mtime":1613597987618,"results":"20","hashOfConfig":"14"},{"size":373,"mtime":1613599989363,"results":"21","hashOfConfig":"14"},{"size":4497,"mtime":1613602469410,"results":"22","hashOfConfig":"14"},{"size":4673,"mtime":1613515930620,"results":"23","hashOfConfig":"14"},{"size":1845,"mtime":1613599710537,"results":"24","hashOfConfig":"14"},{"size":1206,"mtime":1613600144638,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1d8padb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/index.js",[],["53","54"],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/reportWebVitals.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/App.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/Bottles.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/WineNav.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/LogInContainer.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/CellarGui.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/cellar-forms/Sections.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/cellar-forms/Filter.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/cellar-forms/AddBottle.js",["55","56"],"import React, { Fragment } from \"react\";\nimport { Form, Row, Col, Button, Container } from \"react-bootstrap\";\nimport NumericInput from \"react-numeric-input\";\nimport CurrencyInput from \"react-currency-input-field\";\n\nconst AddBottle = (props) => {\n  const sizeOptions = () => {\n    const sizes = [\n      \"Standard (750ml)\",\n      \"Split/Piccolo (187.5ml)\",\n      \"Half/Demi (375 ml)\",\n      \"Half-liter/Jennie (500ml)\",\n      \"Liter (1000ml)\",\n      \"Magnum (1.5 L)\",\n      \"Double Magnum (3 L)\",\n      \"Rehoboam (Jeroboam in Bordeaux) (4.5 L)\",\n      \"Methuselah or Imperial (Bordeaux) (6 L)\",\n      \"Salmanazar (9 L)\",\n      \"Balthazar (12 L)\",\n      \"Nebuchadnezzar (15 L)\",\n      \"Melchior (18 L)\",\n      \"Solomon (20 L)\",\n      \"Sovereign (26 L)\",\n      \"Primat/Goliath (27 L)\",\n      \"Melchizedek/Midas (30 L)\",\n    ];\n    return sizes.map((size) => <option key={size}>{size}</option>);\n  };\n\n  const typeOptions = () => {\n    const types = [\n      \"Cabernet Sauvignon\",\n      \"Cabernet Franc\",\n      \"Malbec\",\n      \"Grenache\",\n      \"Syrah\",\n      \"Mourvedre\",\n      \"Merlot\",\n      \"Syrah\",\n      \"Zinfandel\",\n    ];\n    return types.map((type) => <option key={type}>{type}</option>);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let price = parseInt(e.target.price.value.substring(1).replaceAll(\",\", \"\"));\n\n    let wine = {\n      name: e.target.name.value,\n      winery: e.target.winery.value,\n      wineType: e.target.type.value,\n      year: e.target.year.value,\n    };\n    let bottle = {\n      row: e.target.row.value,\n      column: e.target.column.value,\n      size: e.target.size.value,\n      price: price,\n      section: e.target.section.value,\n    };\n\n    props.bottleSubmit(wine, bottle);\n    e.target.reset();\n  };\n\n  // tooltips on the form might be cool\n  // maybe Formik for validation and handling input values\n  return (\n    <Fragment>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Wine Name\"\n                name=\"name\"\n              ></Form.Control>\n              <Form.Label className=\"mt-2\">Winery</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Winery\"\n                name=\"winery\"\n              ></Form.Control>\n              <Form.Label className=\"mt-2\">Section</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Section Name\"\n                name=\"section\"\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>Type</Form.Label>\n              <Form.Control name=\"type\" as=\"select\">\n                {typeOptions()}\n              </Form.Control>\n              <Form.Label className=\"mt-2\">Year</Form.Label>\n              <NumericInput\n                className=\"form-control\"\n                value={2016}\n                max={2021}\n                min={300}\n                name=\"year\"\n              ></NumericInput>\n              <Form.Row className=\"mt-2\">\n                <Col>\n                  <Form.Label>Row Number</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"X Coordinate\"\n                    name=\"row\"\n                  ></Form.Control>\n                </Col>\n                <Col>\n                  <Form.Label>Column Number</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Y Coordinate\"\n                    name=\"column\"\n                  ></Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n          </Col>\n          <Col className=\"butt-col\">\n            <Form.Group>\n              <Form.Label>Size</Form.Label>\n              <Form.Control name=\"size\" as=\"select\">\n                {sizeOptions()}\n              </Form.Control>\n              <Form.Label className=\"mt-2\">Price</Form.Label>\n              <CurrencyInput\n                className=\"form-control\"\n                name=\"price\"\n                placeholder=\"$12.34\"\n                prefix=\"$\"\n                decimalsLimit={2}\n                name=\"price\"\n              ></CurrencyInput>\n            </Form.Group>\n            <div className=\"mt-4 butt-div\" style={{ textAlign: \"right\" }}>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    </Fragment>\n  );\n};\n\nexport default AddBottle;\n","/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/Section.js",[],"/Users/Lucas/Flatiron/code/projects/phase4Project/front-end/src/components/Cell.js",["57"],"import React, { Component, Fragment } from \"react\";\n\nclass Cell extends Component {\n  state = {};\n  bottleColors = {\n    \"Cabernet Sauvignon\": \"red\",\n    \"Cabernet Franc\": \"red\",\n    \"Malbec\": \"red\",\n    \"Grenache\": \"red\",\n    \"Syrah\": \"red\",\n    \"Mourvedre\": \"red\",\n    \"Merlot\": \"red\",\n    \"Syrah\": \"red\",\n    \"Zinfandel\": \"red\",\n  };\n\n  bottleType = () => {\n    if (this.props.bottle) {\n      return this.bottleColors[this.props.bottle.wine.wineType];\n    } else {\n      return \"empty\";\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"bottle-cell\">\n          {this.props.filteredBottles &&\n          this.props.filteredBottles.find(\n            (bottle) => bottle === this.props.bottle\n          ) ? (\n            <img\n              style={{ backgroundColor: \"#7936f5\" }}\n              src={process.env.PUBLIC_URL + `/bottle-${this.bottleType()}.png`}\n              alt={`${this.bottleType()} wine`}\n            />\n          ) : (\n            <img\n              src={process.env.PUBLIC_URL + `/bottle-${this.bottleType()}.png`}\n              alt={`${this.bottleType()} wine`}\n            />\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Cell;\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":34,"nodeType":"64","messageId":"65","endLine":2,"endColumn":43},{"ruleId":"66","severity":1,"message":"67","line":143,"column":17,"nodeType":"68","endLine":143,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":13,"column":5,"nodeType":"71","messageId":"72","endLine":13,"endColumn":12},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'Syrah'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]