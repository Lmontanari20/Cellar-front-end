[{"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/index.js":"1","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/reportWebVitals.js":"2","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/App.js":"3","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/cellar-forms/Filter.js":"4","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/cellar-forms/Sections.js":"5","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/CellarGui.js":"6","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/WineNav.js":"7","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/LogInContainer.js":"8","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/Bottles.js":"9","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/Section.js":"10","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/Cell.js":"11","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/WineTypes.js":"12","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/WineSizes.js":"13","/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/cellar-forms/Bottle.js":"14"},{"size":500,"mtime":1613152609493,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1613152609493,"results":"17","hashOfConfig":"16"},{"size":8110,"mtime":1613689466045,"results":"18","hashOfConfig":"16"},{"size":4012,"mtime":1613689466045,"results":"19","hashOfConfig":"16"},{"size":2419,"mtime":1613689466045,"results":"20","hashOfConfig":"16"},{"size":2264,"mtime":1613689466045,"results":"21","hashOfConfig":"16"},{"size":1873,"mtime":1613689466045,"results":"22","hashOfConfig":"16"},{"size":1021,"mtime":1613271844223,"results":"23","hashOfConfig":"16"},{"size":1948,"mtime":1613689466045,"results":"24","hashOfConfig":"16"},{"size":2078,"mtime":1613689466045,"results":"25","hashOfConfig":"16"},{"size":1852,"mtime":1613689466045,"results":"26","hashOfConfig":"16"},{"size":277,"mtime":1613689466045,"results":"27","hashOfConfig":"16"},{"size":561,"mtime":1613689466045,"results":"28","hashOfConfig":"16"},{"size":7855,"mtime":1613689466045,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lovr5s",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/index.js",[],["60","61"],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/reportWebVitals.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/App.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/cellar-forms/Filter.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/cellar-forms/Sections.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/CellarGui.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/WineNav.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/LogInContainer.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/Bottles.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/Section.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/Cell.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/WineTypes.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/WineSizes.js",[],"/home/bswan0002/dev/flatiron/projects/cellar/Cellar-front-end/src/components/cellar-forms/Bottle.js",["62"],"import { Component } from \"react\";\nimport { Form, Row, Col, Button, Container } from \"react-bootstrap\";\nimport NumericInput from \"react-numeric-input\";\nimport CurrencyInput from \"react-currency-input-field\";\nimport WineTypes from \"../../WineTypes\";\nimport WineSizes from \"../../WineSizes\";\n\nclass Bottle extends Component {\n  state = {\n    name: \"\",\n    winery: \"\",\n    section: this.props.sections ? this.props.sections[0].name : \"\",\n    type: Object.keys(WineTypes)[0],\n    year: 2016,\n    row: \"\",\n    column: \"\",\n    size: Object.keys(WineSizes)[0],\n    price: \"\",\n    formType: \"Add Bottle\",\n  };\n\n  componentDidMount() {\n    if (this.props.selectedCell) {\n      if (this.props.selectedBottle) {\n        // Selected cell has a bottle\n        this.setState({\n          name: this.props.selectedBottle.wine.name,\n          winery: this.props.selectedBottle.wine.winery,\n          section: Object.keys(this.props.selectedCell)[0],\n          type: this.props.selectedBottle.wine.wineType,\n          year: this.props.selectedBottle.wine.year,\n          row: `${this.props.selectedBottle.row}`,\n          column: `${this.props.selectedBottle.column}`,\n          size: this.props.selectedBottle.size,\n          price: this.props.selectedBottle.price,\n          formType: \"Edit Bottle\",\n        });\n      } else {\n        // Selected cell is empty\n        this.setState({\n          name: \"\",\n          winery: \"\",\n          section: `${Object.keys(this.props.selectedCell)[0]}`,\n          type: Object.keys(WineTypes)[0],\n          year: 2016,\n          row: `${Object.values(this.props.selectedCell)[0][1]}`,\n          column: `${Object.values(this.props.selectedCell)[0][0]}`,\n          size: Object.keys(WineSizes)[0],\n          price: \"\",\n          formType: \"Add Bottle\",\n        });\n      }\n    }\n  }\n\n  sizeOptions = () => {\n    const sizes = Object.keys(WineSizes);\n    return sizes.map((size) => <option key={size}>{size}</option>);\n  };\n\n  typeOptions = () => {\n    const types = Object.keys(WineTypes);\n    return types.map((type) => <option key={type}>{type}</option>);\n  };\n\n  sections = () => {\n    if (this.props.sections) {\n      return this.props.sections.map((section) => {\n        return <option key={section.name}>{section.name}</option>;\n      });\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    let price = parseInt(this.state.price.replaceAll(\",\", \"\"));\n\n    let wine = {\n      name: this.state.name,\n      winery: this.state.winery,\n      wineType: this.state.type,\n      year: this.state.year,\n    };\n    let bottle = {\n      row: this.state.row,\n      column: this.state.column,\n      size: this.state.size,\n      price: price,\n      section: this.state.section,\n    };\n\n    console.log(wine, bottle);\n    this.props.bottleSubmit(wine, bottle);\n\n    this.setState({\n      name: \"\",\n      winery: \"\",\n      section: this.props.sections[0].name,\n      type: Object.keys(WineTypes)[0],\n      year: 2016,\n      row: \"\",\n      column: \"\",\n      size: Object.keys(WineSizes)[0],\n      price: \"\",\n    });\n  };\n\n  handleChange = (e, field = null) => {\n    if (!field) {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    } else if (field === \"year\") {\n      this.setState({\n        year: e,\n      });\n    } else {\n      this.setState({\n        price: e,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"form-div\">\n        <Container>\n          <h2>{this.state.formType}</h2>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Row>\n              <Col xs={4}>\n                <Form.Group>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Wine Name\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  ></Form.Control>\n                  <Form.Label className=\"mt-2\">Winery</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Winery\"\n                    name=\"winery\"\n                    value={this.state.winery}\n                    onChange={this.handleChange}\n                  ></Form.Control>\n                </Form.Group>\n              </Col>\n              <Col xs={4}>\n                <Form.Group>\n                  <Form.Label>Type</Form.Label>\n                  <Form.Control\n                    name=\"type\"\n                    as=\"select\"\n                    value={this.state.type}\n                    onChange={this.handleChange}\n                  >\n                    {this.typeOptions()}\n                  </Form.Control>\n                  <Form.Label className=\"mt-2\">Year</Form.Label>\n                  <NumericInput\n                    className=\"form-control\"\n                    value={this.state.year}\n                    max={2021}\n                    min={300}\n                    name=\"year\"\n                    onChange={(e) => this.handleChange(e, \"year\")}\n                  ></NumericInput>\n                </Form.Group>\n              </Col>\n              <Col xs={4} className=\"butt-col\">\n                <Form.Group>\n                  <Form.Label>Size</Form.Label>\n                  <Form.Control\n                    name=\"size\"\n                    as=\"select\"\n                    value={this.state.size}\n                    onChange={this.handleChange}\n                  >\n                    {this.sizeOptions()}\n                  </Form.Control>\n                  <Form.Label className=\"mt-2\">Price</Form.Label>\n                  <CurrencyInput\n                    className=\"form-control\"\n                    name=\"price\"\n                    placeholder=\"$12.34\"\n                    prefix=\"$\"\n                    decimalsLimit={2}\n                    value={this.state.price}\n                    onValueChange={(e) => this.handleChange(e, \"price\")}\n                  ></CurrencyInput>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n            <Form.Row>\n              <Col xs={4}>\n                <Form.Label>Section</Form.Label>\n              </Col>\n              <Col xs={2}>\n                <Form.Label>Column Number</Form.Label>\n              </Col>\n              <Col xs={2}>\n                <Form.Label>Row Number</Form.Label>\n              </Col>\n            </Form.Row>\n            <Form.Row>\n              <Col xs={4}>\n                <Form.Control\n                  as=\"select\"\n                  name=\"section\"\n                  value={this.state.section}\n                  onChange={this.handleChange}\n                >\n                  {this.sections()}\n                </Form.Control>\n              </Col>\n              <Col xs={2}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"X Coordinate\"\n                  name=\"column\"\n                  value={this.state.column}\n                  onChange={this.handleChange}\n                ></Form.Control>\n              </Col>\n              <Col xs={2}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Y Coordinate\"\n                  name=\"row\"\n                  value={this.state.row}\n                  onChange={this.handleChange}\n                ></Form.Control>\n              </Col>\n              <Col xs={2}>\n                <Button variant=\"primary\" type=\"submit\">\n                  {this.state.formType}\n                </Button>\n              </Col>\n              {this.state.formType === \"Edit Bottle\" ? (\n                <Col xs={2} style={{ textAlign: \"right\" }}>\n                  <Button variant=\"danger\">Drink Bottle</Button>\n                </Col>\n              ) : null}\n            </Form.Row>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Bottle;\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":19},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]